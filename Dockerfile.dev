# Dockerfile para Ambiente de Desenvolvimento
# Instala TODAS as dependências e prepara o ambiente para hot-reload com nodemon.

FROM node:18-slim

# Instala as dependências de SO necessárias para o Puppeteer/Chromium rodar.
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    ca-certificates \
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libc6 \
    libcairo2 \
    libcups2 \
    libdbus-1-3 \
    libexpat1 \
    libfontconfig1 \
    libgbm1 \
    libgcc1 \
    libglib2.0-0 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libstdc++6 \
    libx11-6 \
    libx11-xcb1 \
    libxcb1 \
    libxcomposite1 \
    libxcursor1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxi6 \
    libxrandr2 \
    libxrender1 \
    libxss1 \
    libxtst6 \
    lsb-release \
    wget \
    xdg-utils \
    chromium \
    && rm -rf /var/lib/apt/lists/*

# Define o diretório de trabalho no container
WORKDIR /usr/src/app

# Copia os arquivos de definição de pacotes
COPY package*.json ./

# Instala TODAS as dependências (incluindo devDependencies)
# Usamos 'npm ci' para garantir consistência com o package-lock.json
RUN npm ci

# Copia o restante do código-fonte. O volume no docker-compose irá sobrepor 'src',
# mas copiar aqui é uma boa prática para garantir que a imagem possa ser construída
# e executada de forma independente, se necessário.
COPY . .

# O comando será fornecido pelo docker-compose
